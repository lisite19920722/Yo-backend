/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'globit' at '8/29/15 9:01 AM' with Gradle 2.4
 */
def vJavaLang = '1.8'
def javaProjects = [project(':luna-core'), project(':luna-common-util'), project(':luna-common-dal'),
                    project(':luna-biz'), project(':luna-web')]

buildscript {
    ext.springRepo = 'http://maven.aliyun.com/nexus/content/groups/public/'

    repositories {
        maven { url springRepo }
    }
    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE'
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE"
        classpath 'org.springframework:springloaded:1.2.4.RELEASE'
        classpath 'org.cloudfoundry:cf-gradle-plugin:1.1.2' // see deploy.gradle
    }
}



configure(allprojects) {
    apply plugin: 'eclipse'
    apply plugin: 'idea'
}

configure(javaProjects) {
    apply plugin: 'java'
    compileJava.options.encoding = 'UTF-8'

    targetCompatibility = vJavaLang
    sourceCompatibility = vJavaLang

    idea {
        module {
            inheritOutputDirs = false
            outputDir = file("$buildDir/classes/main/")
        }
    }

    repositories {
        maven { url springRepo }
    }

    dependencies {
        compile 'org.slf4j:slf4j-api'
        compile 'org.projectlombok:lombok'
        compile 'org.springframework.boot:spring-boot-starter-log4j'
        //local jars
        compile files('libs/javabuilder.jar', 'libs/test.jar')
        testCompile 'junit:junit'
        testCompile 'org.springframework:spring-test'
        testCompile 'org.hamcrest:hamcrest-library'
        testCompile 'org.mockito:mockito-core'
        testCompile 'org.objenesis:objenesis'
    }


    configurations {
        all*.exclude module: 'spring-boot-starter-logging'
    }

    eclipseClasspath.dependsOn testClasses

    eclipseJdt.onlyIf { false }
    cleanEclipseJdt.onlyIf { false }

}
