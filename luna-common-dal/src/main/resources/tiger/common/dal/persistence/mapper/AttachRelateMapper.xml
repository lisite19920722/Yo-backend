<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="tiger.common.dal.persistence.mapper.AttachRelateMapper">
    <resultMap id="BaseResultMap" type="tiger.common.dal.persistence.attach.AttachRelateDO">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="subject_id" property="subjectId" jdbcType="BIGINT"/>
        <result column="attach_id" property="attachId" jdbcType="BIGINT"/>
        <result column="biz_type" property="bizType" jdbcType="VARCHAR"/>
        <result column="ext_params" property="extParams" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, subject_id, attach_id, biz_type, ext_params
    </sql>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="tiger.common.dal.persistence.attach.example.AttachRelateExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from attach_relate
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExampleAndPage" resultMap="BaseResultMap"
            parameterType="tiger.common.dal.persistence.attach.example.AttachRelateExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from attach_relate
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="tiger.common.dal.persistence.attach.example.AttachRelateExample">
        delete from attach_relate
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <select id="countByExample" parameterType="tiger.common.dal.persistence.attach.example.AttachRelateExample"
            resultType="java.lang.Integer">
        select count(*) from attach_relate
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update attach_relate
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.subjectId != null">
                subject_id = #{record.subjectId,jdbcType=BIGINT},
            </if>
            <if test="record.attachId != null">
                attach_id = #{record.attachId,jdbcType=BIGINT},
            </if>
            <if test="record.bizType != null">
                biz_type = #{record.bizType,jdbcType=VARCHAR},
            </if>
            <if test="record.extParams != null">
                ext_params = #{record.extParams,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update attach_relate
        set id = #{record.id,jdbcType=BIGINT},
        subject_id = #{record.subjectId,jdbcType=BIGINT},
        attach_id = #{record.attachId,jdbcType=BIGINT},
        biz_type = #{record.bizType,jdbcType=VARCHAR},
        ext_params = #{record.extParams,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from attach_relate
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from attach_relate
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="tiger.common.dal.persistence.attach.AttachRelateDO" useGeneratedKeys="true"
            keyProperty="id">
        insert into attach_relate (subject_id, attach_id, biz_type,
        ext_params)
        values (#{subjectId,jdbcType=BIGINT}, #{attachId,jdbcType=BIGINT}, #{bizType,jdbcType=VARCHAR},
        #{extParams,jdbcType=VARCHAR})
    </insert>
    <insert id="batchInsert" parameterType="java.util.List"
            useGeneratedKeys="true">
        insert into attach_relate (subject_id, attach_id, biz_type,
        ext_params)
        values
        <foreach collection="list" item="item" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                #{item.subjectId,jdbcType=BIGINT},
                #{item.attachId,jdbcType=BIGINT},
                #{item.bizType,jdbcType=VARCHAR},
                #{item.extParams,jdbcType=VARCHAR}
            </trim>
        </foreach>
    </insert>

    <insert id="insertSelective" parameterType="tiger.common.dal.persistence.attach.AttachRelateDO" useGeneratedKeys="true"
            keyProperty="id">
        insert into attach_relate
        <trim prefix="(" suffix=")" suffixOverrides=",">
            subject_id,
            attach_id,
            biz_type,
            ext_params,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{subjectId,jdbcType=BIGINT},
            #{attachId,jdbcType=BIGINT},
            #{bizType,jdbcType=VARCHAR},
            #{extParams,jdbcType=VARCHAR},
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="tiger.common.dal.persistence.attach.AttachRelateDO">
        update attach_relate
        <set>
            <if test="subjectId != null">
                subject_id = #{subjectId,jdbcType=BIGINT},
            </if>
            <if test="attachId != null">
                attach_id = #{attachId,jdbcType=BIGINT},
            </if>
            <if test="bizType != null">
                biz_type = #{bizType,jdbcType=VARCHAR},
            </if>
            <if test="extParams != null">
                ext_params = #{extParams,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="tiger.common.dal.persistence.attach.AttachRelateDO">
        update attach_relate
        set subject_id = #{subjectId,jdbcType=BIGINT},
        attach_id = #{attachId,jdbcType=BIGINT},
        biz_type = #{bizType,jdbcType=VARCHAR},
        ext_params = #{extParams,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>
