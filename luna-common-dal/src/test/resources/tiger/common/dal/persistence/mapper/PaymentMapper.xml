<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="tiger.common.dal.persistence.mapper.PaymentMapper" >
  <resultMap id="BaseResultMap" type="tiger.common.dal.persistence.system.PaymentDO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="account_id" property="accountId" jdbcType="BIGINT" />
    <result column="biz_type" property="bizType" jdbcType="VARCHAR" />
    <result column="biz_key" property="bizKey" jdbcType="VARCHAR" />
    <result column="total_fee" property="totalFee" jdbcType="DOUBLE" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="discount" property="discount" jdbcType="DOUBLE" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="pay_type" property="payType" jdbcType="VARCHAR" />
    <result column="pay_method" property="payMethod" jdbcType="VARCHAR" />
    <result column="trade_no" property="tradeNo" jdbcType="BIGINT" />
    <result column="ext_params" property="extParams" jdbcType="VARCHAR" />
    <result column="is_deleted" property="isDeleted" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, account_id, biz_type, biz_key, total_fee, `state`, discount, remark, create_time, 
    update_time, pay_type, pay_method, trade_no, ext_params, is_deleted
  </sql>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="tiger.common.dal.persistence.system.example.PaymentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from payment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="tiger.common.dal.persistence.system.example.PaymentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from payment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="tiger.common.dal.persistence.system.example.PaymentExample" >
    delete from payment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="tiger.common.dal.persistence.system.example.PaymentExample" resultType="java.lang.Integer" >
    select count(*) from payment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update payment
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.accountId != null" >
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.bizType != null" >
        biz_type = #{record.bizType,jdbcType=VARCHAR},
      </if>
      <if test="record.bizKey != null" >
        biz_key = #{record.bizKey,jdbcType=VARCHAR},
      </if>
      <if test="record.totalFee != null" >
        total_fee = #{record.totalFee,jdbcType=DOUBLE},
      </if>
      <if test="record.state != null" >
        `state` = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.discount != null" >
        discount = #{record.discount,jdbcType=DOUBLE},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = CURRENT_TIMESTAMP,
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=VARCHAR},
      </if>
      <if test="record.payMethod != null" >
        pay_method = #{record.payMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeNo != null" >
        trade_no = #{record.tradeNo,jdbcType=BIGINT},
      </if>
      <if test="record.extParams != null" >
        ext_params = #{record.extParams,jdbcType=VARCHAR},
      </if>
      <if test="record.isDeleted != null" >
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update payment
    set id = #{record.id,jdbcType=BIGINT},
      account_id = #{record.accountId,jdbcType=BIGINT},
      biz_type = #{record.bizType,jdbcType=VARCHAR},
      biz_key = #{record.bizKey,jdbcType=VARCHAR},
      total_fee = #{record.totalFee,jdbcType=DOUBLE},
      `state` = #{record.state,jdbcType=VARCHAR},
      discount = #{record.discount,jdbcType=DOUBLE},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = CURRENT_TIMESTAMP,
      pay_type = #{record.payType,jdbcType=VARCHAR},
      pay_method = #{record.payMethod,jdbcType=VARCHAR},
      trade_no = #{record.tradeNo,jdbcType=BIGINT},
      ext_params = #{record.extParams,jdbcType=VARCHAR},
      is_deleted = #{record.isDeleted,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from payment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from payment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="tiger.common.dal.persistence.system.PaymentDO" useGeneratedKeys="true" keyProperty="id" >
    insert into payment (account_id, biz_type, biz_key, 
      total_fee, `state`, discount, 
      remark, create_time, update_time, 
      pay_type, pay_method, trade_no, 
      ext_params, is_deleted)
    values (#{accountId,jdbcType=BIGINT}, #{bizType,jdbcType=VARCHAR}, #{bizKey,jdbcType=VARCHAR}, 
      #{totalFee,jdbcType=DOUBLE}, #{state,jdbcType=VARCHAR}, #{discount,jdbcType=DOUBLE}, 
      #{remark,jdbcType=VARCHAR}, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
      #{payType,jdbcType=VARCHAR}, #{payMethod,jdbcType=VARCHAR}, #{tradeNo,jdbcType=BIGINT}, 
      #{extParams,jdbcType=VARCHAR}, #{isDeleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="tiger.common.dal.persistence.system.PaymentDO" useGeneratedKeys="true" keyProperty="id" >
    insert into payment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      account_id,
      biz_type,
      biz_key,
      total_fee,
      `state`,
      discount,
      remark,
      create_time,
      update_time,
      pay_type,
      pay_method,
      trade_no,
      ext_params,
      is_deleted,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{accountId,jdbcType=BIGINT},
      #{bizType,jdbcType=VARCHAR},
      #{bizKey,jdbcType=VARCHAR},
      #{totalFee,jdbcType=DOUBLE},
      #{state,jdbcType=VARCHAR},
      #{discount,jdbcType=DOUBLE},
      #{remark,jdbcType=VARCHAR},
      CURRENT_TIMESTAMP,
      CURRENT_TIMESTAMP,
      #{payType,jdbcType=VARCHAR},
      #{payMethod,jdbcType=VARCHAR},
      #{tradeNo,jdbcType=BIGINT},
      #{extParams,jdbcType=VARCHAR},
      #{isDeleted,jdbcType=BIT},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="tiger.common.dal.persistence.system.PaymentDO" >
    update payment
    <set >
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="bizType != null" >
        biz_type = #{bizType,jdbcType=VARCHAR},
      </if>
      <if test="bizKey != null" >
        biz_key = #{bizKey,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null" >
        total_fee = #{totalFee,jdbcType=DOUBLE},
      </if>
      <if test="state != null" >
        `state` = #{state,jdbcType=VARCHAR},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=DOUBLE},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = CURRENT_TIMESTAMP,
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=VARCHAR},
      </if>
      <if test="payMethod != null" >
        pay_method = #{payMethod,jdbcType=VARCHAR},
      </if>
      <if test="tradeNo != null" >
        trade_no = #{tradeNo,jdbcType=BIGINT},
      </if>
      <if test="extParams != null" >
        ext_params = #{extParams,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="tiger.common.dal.persistence.system.PaymentDO" >
    update payment
    set account_id = #{accountId,jdbcType=BIGINT},
      biz_type = #{bizType,jdbcType=VARCHAR},
      biz_key = #{bizKey,jdbcType=VARCHAR},
      total_fee = #{totalFee,jdbcType=DOUBLE},
      `state` = #{state,jdbcType=VARCHAR},
      discount = #{discount,jdbcType=DOUBLE},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = CURRENT_TIMESTAMP,
      pay_type = #{payType,jdbcType=VARCHAR},
      pay_method = #{payMethod,jdbcType=VARCHAR},
      trade_no = #{tradeNo,jdbcType=BIGINT},
      ext_params = #{extParams,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>