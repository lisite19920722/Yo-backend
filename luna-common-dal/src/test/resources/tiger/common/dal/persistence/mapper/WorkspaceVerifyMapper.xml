<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="tiger.common.dal.persistence.mapper.WorkspaceVerifyMapper" >
  <resultMap id="BaseResultMap" type="tiger.common.dal.persistence.workspace.WorkspaceVerifyDO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="account_id" property="accountId" jdbcType="BIGINT" />
    <result column="workspace_id" property="workspaceId" jdbcType="BIGINT" />
    <result column="is_verified" property="isVerified" jdbcType="BIT" />
    <result column="expired_time" property="expiredTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, account_id, workspace_id, is_verified, expired_time, create_time, update_time
  </sql>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="tiger.common.dal.persistence.workspace.example.WorkspaceVerifyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from workspace_verify
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="tiger.common.dal.persistence.workspace.example.WorkspaceVerifyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from workspace_verify
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="tiger.common.dal.persistence.workspace.example.WorkspaceVerifyExample" >
    delete from workspace_verify
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="tiger.common.dal.persistence.workspace.example.WorkspaceVerifyExample" resultType="java.lang.Integer" >
    select count(*) from workspace_verify
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update workspace_verify
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.accountId != null" >
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.workspaceId != null" >
        workspace_id = #{record.workspaceId,jdbcType=BIGINT},
      </if>
      <if test="record.isVerified != null" >
        is_verified = #{record.isVerified,jdbcType=BIT},
      </if>
      <if test="record.expiredTime != null" >
        expired_time = #{record.expiredTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = CURRENT_TIMESTAMP,
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update workspace_verify
    set id = #{record.id,jdbcType=BIGINT},
    account_id = #{record.accountId,jdbcType=BIGINT},
    workspace_id = #{record.workspaceId,jdbcType=BIGINT},
    is_verified = #{record.isVerified,jdbcType=BIT},
    expired_time = #{record.expiredTime,jdbcType=TIMESTAMP},
    create_time = #{record.createTime,jdbcType=TIMESTAMP},
    update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from workspace_verify
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from workspace_verify
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="tiger.common.dal.persistence.workspace.WorkspaceVerifyDO" useGeneratedKeys="true" keyProperty="id" >
    insert into workspace_verify (account_id, workspace_id, is_verified,
    expired_time, create_time, update_time
    )
    values (#{accountId,jdbcType=BIGINT}, #{workspaceId,jdbcType=BIGINT}, #{isVerified,jdbcType=BIT},
    #{expiredTime,jdbcType=TIMESTAMP}, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP
    )
  </insert>
  <insert id="insertSelective" parameterType="tiger.common.dal.persistence.workspace.WorkspaceVerifyDO" useGeneratedKeys="true" keyProperty="id" >
    insert into workspace_verify
    <trim prefix="(" suffix=")" suffixOverrides="," >
      account_id,
      workspace_id,
      is_verified,
      expired_time,
      create_time,
      update_time,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{accountId,jdbcType=BIGINT},
      #{workspaceId,jdbcType=BIGINT},
      #{isVerified,jdbcType=BIT},
      #{expiredTime,jdbcType=TIMESTAMP},
      CURRENT_TIMESTAMP,
      CURRENT_TIMESTAMP,
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="tiger.common.dal.persistence.workspace.WorkspaceVerifyDO" >
    update workspace_verify
    <set >
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="workspaceId != null" >
        workspace_id = #{workspaceId,jdbcType=BIGINT},
      </if>
      <if test="isVerified != null" >
        is_verified = #{isVerified,jdbcType=BIT},
      </if>
      <if test="expiredTime != null" >
        expired_time = #{expiredTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = CURRENT_TIMESTAMP,
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="tiger.common.dal.persistence.workspace.WorkspaceVerifyDO" >
    update workspace_verify
    set account_id = #{accountId,jdbcType=BIGINT},
    workspace_id = #{workspaceId,jdbcType=BIGINT},
    is_verified = #{isVerified,jdbcType=BIT},
    expired_time = #{expiredTime,jdbcType=TIMESTAMP},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    update_time = CURRENT_TIMESTAMP
    where id = #{id,jdbcType=BIGINT}
  </update>

  <sql id="queryVerifyCondition">
    <where>
      <if test="null != query.workspaceId">
        workspace_id = #{query.workspaceId}
      </if>
    </where>
  </sql>


  <!-- 按条件获取审核数目 -->
  <select id="countVerify" resultType="java.lang.Integer">
    select
      count(id)
    from workspace_verify
    <include refid="queryVerifyCondition"/>
  </select>

  <!-- 分页获取团队审核信息 -->
  <select id="queryVerify" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from workspace_verify
    <include refid="queryVerifyCondition"/>
    order by update_time desc
    limit #{offset}, #{limit}
  </select>



</mapper>
