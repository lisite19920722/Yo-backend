<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="tiger.common.dal.persistence.mapper.CourseTaskMapper" >
  <resultMap id="BaseResultMap" type="tiger.common.dal.persistence.course.CourseTaskDO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="biz_type" property="bizType" jdbcType="VARCHAR" />
    <result column="biz_id" property="bizId" jdbcType="BIGINT" />
    <result column="biz_link" property="bizLink" jdbcType="VARCHAR" />
    <result column="biz_scope" property="bizScope" jdbcType="VARCHAR" />
    <result column="push_time" property="pushTime" jdbcType="TIME" />
    <result column="is_repeated" property="isRepeated" jdbcType="BIT" />
    <result column="ext_params" property="extParams" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, create_time, update_time, title, biz_type, biz_id, biz_link, biz_scope, push_time, 
    is_repeated, ext_params
  </sql>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="tiger.common.dal.persistence.course.example.CourseTaskExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="tiger.common.dal.persistence.course.example.CourseTaskExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="tiger.common.dal.persistence.course.example.CourseTaskExample" >
    delete from course_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="tiger.common.dal.persistence.course.example.CourseTaskExample" resultType="java.lang.Integer" >
    select count(*) from course_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update course_task
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = CURRENT_TIMESTAMP,
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.bizType != null" >
        biz_type = #{record.bizType,jdbcType=VARCHAR},
      </if>
      <if test="record.bizId != null" >
        biz_id = #{record.bizId,jdbcType=BIGINT},
      </if>
      <if test="record.bizLink != null" >
        biz_link = #{record.bizLink,jdbcType=VARCHAR},
      </if>
      <if test="record.bizScope != null" >
        biz_scope = #{record.bizScope,jdbcType=VARCHAR},
      </if>
      <if test="record.pushTime != null" >
        push_time = #{record.pushTime,jdbcType=TIME},
      </if>
      <if test="record.isRepeated != null" >
        is_repeated = #{record.isRepeated,jdbcType=BIT},
      </if>
      <if test="record.extParams != null" >
        ext_params = #{record.extParams,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update course_task
    set id = #{record.id,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = CURRENT_TIMESTAMP,
      title = #{record.title,jdbcType=VARCHAR},
      biz_type = #{record.bizType,jdbcType=VARCHAR},
      biz_id = #{record.bizId,jdbcType=BIGINT},
      biz_link = #{record.bizLink,jdbcType=VARCHAR},
      biz_scope = #{record.bizScope,jdbcType=VARCHAR},
      push_time = #{record.pushTime,jdbcType=TIME},
      is_repeated = #{record.isRepeated,jdbcType=BIT},
      ext_params = #{record.extParams,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from course_task
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from course_task
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="tiger.common.dal.persistence.course.CourseTaskDO" useGeneratedKeys="true" keyProperty="id" >
    insert into course_task (create_time, update_time, title, 
      biz_type, biz_id, biz_link, 
      biz_scope, push_time, is_repeated, 
      ext_params)
    values (CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, #{title,jdbcType=VARCHAR},
      #{bizType,jdbcType=VARCHAR}, #{bizId,jdbcType=BIGINT}, #{bizLink,jdbcType=VARCHAR}, 
      #{bizScope,jdbcType=VARCHAR}, #{pushTime,jdbcType=TIME}, #{isRepeated,jdbcType=BIT}, 
      #{extParams,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="tiger.common.dal.persistence.course.CourseTaskDO" useGeneratedKeys="true" keyProperty="id" >
    insert into course_task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      create_time,
      update_time,
      title,
      biz_type,
      biz_id,
      biz_link,
      biz_scope,
      push_time,
      is_repeated,
      ext_params,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      CURRENT_TIMESTAMP,
      CURRENT_TIMESTAMP,
      #{title,jdbcType=VARCHAR},
      #{bizType,jdbcType=VARCHAR},
      #{bizId,jdbcType=BIGINT},
      #{bizLink,jdbcType=VARCHAR},
      #{bizScope,jdbcType=VARCHAR},
      #{pushTime,jdbcType=TIME},
      #{isRepeated,jdbcType=BIT},
      #{extParams,jdbcType=VARCHAR},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="tiger.common.dal.persistence.course.CourseTaskDO" >
    update course_task
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = CURRENT_TIMESTAMP,
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="bizType != null" >
        biz_type = #{bizType,jdbcType=VARCHAR},
      </if>
      <if test="bizId != null" >
        biz_id = #{bizId,jdbcType=BIGINT},
      </if>
      <if test="bizLink != null" >
        biz_link = #{bizLink,jdbcType=VARCHAR},
      </if>
      <if test="bizScope != null" >
        biz_scope = #{bizScope,jdbcType=VARCHAR},
      </if>
      <if test="pushTime != null" >
        push_time = #{pushTime,jdbcType=TIME},
      </if>
      <if test="isRepeated != null" >
        is_repeated = #{isRepeated,jdbcType=BIT},
      </if>
      <if test="extParams != null" >
        ext_params = #{extParams,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="tiger.common.dal.persistence.course.CourseTaskDO" >
    update course_task
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = CURRENT_TIMESTAMP,
      title = #{title,jdbcType=VARCHAR},
      biz_type = #{bizType,jdbcType=VARCHAR},
      biz_id = #{bizId,jdbcType=BIGINT},
      biz_link = #{bizLink,jdbcType=VARCHAR},
      biz_scope = #{bizScope,jdbcType=VARCHAR},
      push_time = #{pushTime,jdbcType=TIME},
      is_repeated = #{isRepeated,jdbcType=BIT},
      ext_params = #{extParams,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>